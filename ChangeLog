Version 1.3   Monday, July 16, 2006

	General modifications
	---------------------

	- Added examples/example7.cpp & associated RINEX data files
	        This program shows 10 different ways to process GPS data using
		"GNSS data structures". The "GNSS Data Structures" paradigm can   
	        process GPS code-based data based on Voctors, Matrices 
		and other objects.
	- Added examples/example6.cpp
	        Shows a rather minimilist way to process GPS data using GNSS Data
		Strutures

	- Improved src/icd_200_constants.hpp
	        Fixed RSVCLK value	

	- GPSTk is now able to build under the MS Visual Studio 2005 (Express
	        Edition)

	Library modifications
	---------------------

	- Added src/SimpleKalmanFilter.[h|c]pp
	        Implements a version of the Kalman filter, based in Vectors
		and Matrices - not yet GNSS data stuctrures-enabled

	- Added src/NablaOp.[h|c]pp
	        Applies differences in satellite-related data to the GNSS
		data structures (a.k.a. GDS)

	- Added src/TypeID.[h|c]pp
	        Index able to represent any type of observation, correction,
		model paratmeter or other data value of interest 

	- Added src/DataHeaders.[h|c]pp
	        Adds several headers to be used with the GNSS data structures
		classes

	- Added DataStructures.[h|c]pp
	        Set of data structures to be used by other GPSTk classes

	- Added src/DeltaOp.[h|c]pp
	        Applies differences on ground-related data to the GNSS data
		structures

	- Added src/ComputeCompination.hpp
	        Base class to ease computing of data for the GNSS data structures

	- Added src/ComputePC.hpp
	        Eases computing the PC combination for GNSS data structures

	- Added src/ComputeLC.hpp
	        Eases computing the LC combination for GNSS data structures

	- Added src/ComputeLI.hpp
	        Eases computing the LI combination for GNSS data structures

	- Added src/ComputeLdelta.hpp
	        Eases computing the Ldelta combination for GNSS data structures

	- Added src/ComputePdelta.hpponly
	        Eases computing the Pdelta combination for GNSS data structures

	- Added src/ComputePI.hpp
	        Eases computing the PI combination for GNSS data structures

	- Added src/ComputeMelbourneWubbena.hpp
	        Eases computing the ComputeMelbourneWubbena combination for 
		GNSS data structures

	- Added src/ComputeIURAWeights.hpp
	        Computes satellites weights based on URA Index for GNSS data
		structures

	- Added src/ComputeMOPSWeights.hpp
	        Computes satellites weights based on Appendix J of MOPS C
		(RTCA/DO-229C), for GNSS data structures

	- Added src/SimpleFilter.hpp
	        Filters satellites with observables grossly out of bounds, 
		intended for GNSS data structures

	- Added src/OneFreqCSDetector.hpp
	        Detects cycle slips using observables in just one frequency

	- Added src/LICSDetector.hpp
	        Detects cycle slips using LI observables

	- Added src/MWCSDetector.hpp
	        Detects cycle slips using the Melbourne-Wubbena combination

	- Added src/CodeSmoother.hpp
	        Smoothes a given code observable using the corresponding phase 
		observable

	- Added src/PCsmoother.hpp
	        Smoothes PC code obserrvables using the corresponding LC phase
		observables

	- Added src/XYZ2NEU.[h|c]pp
	        Refrence frame change from ECEF XYZ to topcentric North-East-Up

	- Added src/XYZ2NED.[h|c]pp
	        Refrence frame change from ECEF XYZ to topcentric North-East-Down

	- Added src/TimeNamedFileStream.hpp
	        Simple time-based file name stream

	- Improved src/ModeledReferencePR.[c|h]pp
	        Adapted to work with GNSS data structures

	- Improved src/ModeledPR.[h|c]pp
	        Adapted to work with GNSS data structures

	- Improved src/TropModel.hpp
	        Added method MOPSTropModel::setAllParameters()

	- Improved src/SolverLMS.[h|c]pp
	        Adapted to work with GNSS data structures

	- Improved src/SolverWMS.[h|c]pp
	        Adapted to work with GNSS data structures

	- Improved src/icd_200_constants.hpp
	        Added data regarding L5, L6, L7 and L8

	- Improved src/RinexHeader.[h|c]pp
	        Can now process RINEX2.11 navigation files

	- Improved src/icd_200_constants.hpp
	        Fixed RSVCLK

	- Improved src/SP3Data.cpp
	        Modified the reader to be tolerant of short PG lines

	- Improved src/RinexUtilitties.[h|c]pp
	        Added a sort routine 

	- Improved src/EngAlmanac.[h|c]pp
	        Routing added that performs a simple sanity check on the almanac
	
	Application modifications
	-------------------------

	- Improved apps/differential/vecsol.cpp
	        Along with other submissions allows the toolkit to build under
		the MS Visual Studio 2005

	- Improved apps/Rinextools.[h|c]pp
	        Increased robustness and added multiple input file capabilities

	- Improved all tools to process input files in time order:
	        apps/Rinextools/ResCor.cpp
		apps/Rinextools/RinSum.cpp
		apps/Rinextools/RinexDump.cpp
		apps/positioning/PRSolve.cpp

Version 1.2   Monday, November 6, 2006
	
	General modifications
	---------------------
	
	- Moved from Perfoce to a Subversion repository located at 
		https://svn.sourceforge.net/svnroot/gpstk
	
	- GPSTk library testing is now being implemented in dev/tests
		These unit tests for the library currently cover over
		40% of the code with an average of 95% coverage for 
		tested classes.  Tests use CppUnit and Perl scripts.
		See test documentation for more information.
	
	- Added examples/example5.cpp
		An example that shows how to use some very useful high level
		GPSTk classes for positioning
			
	- Added Python support to the GPSTk
	
	- Added capability for FileHunter to work under Window and Cigwin
	
	Library modifications
	---------------------
	
	- Added RINEX version 2.11 support for GPS Navigation files
	
	- Added the following prototype time classes:
		src/CommonTime.[h|c]pp
		src/YDSTime.[h|c]pp
		src/CivilTime.[h|c]pp
		src/GPSEpochWeekSecond.[h|c]pp
		src/GPSWeekSecond.[h|c]pp
		src/GPSWeekZcount.[h|c]pp
		src/JulianDate.[h|c]pp
		src/MJD.[h|c]pp
		src/UnixTime.[h|c]pp
		
	- Added src/TimeConstants.hpp
		Time constants
	
	- Added src/TimeConverters.[c|h]pp
		Time converstion routines
	
	- Added src/Bancroft.[h|c]pp 
		Class gets an initial guess of GPS receiver's position
		
	- Added src/SVExclusionList.[h|c]pp
	
	- Added and implemented src/SatID.hpp
		Class which encapsulates Satellite Identification information
	
	- Added src/ModeledPR.[h|c]pp
		Encapsulates computation of modeled psuedoranges of a mobile
		receiver
		
	- Added src/SimpleIURAWeight.[h|c]pp
		Assigns weights to satellites based on their URA Index
	 
	- Added src/ModeledPseudorangeBase.hpp
		An abstract base class for modeled pseudoranges
	
	- Added src/WeightBase.hpp
		An abstract base class for algorithms assigning weights to satellites
			
	- Improved src/Matrix.hpp and src/Vector.hpp
		Added unary minus operator, CholeskyCrout class and inverseChol method
	
	- Improved src/Vector.hpp
		Added add() method
		
	- Improved src/Stats.hpp 
		Better handling of weighted input
		
	- Improved src/Tropmodel.[h|c]pp
		Added GCAT tropospheric model
		Added MOPSTropModel
		
	- Improved src/Position.[h|c]pp 
		Added methods elevationGeodetic() and azimuthGeodetic()
	
	- Improved src/TabularEphemerisStore.[h|c]pp
		Added method hasTGD()
		
	- Improved src/BCEphemerisStore.[h|c]pp
		Added method getTGD() to return the Total Group Delay of the SV
	
	- Improved src/EphemerisRange.[h|c]pp
		Added methods elevationGeodeitc() and azimuthGeodetic().
		Changed RelativityCorrection() to improved speed and precision
	
	- Added src/BinexData.[c|h]pp BinexFilterOperators.hpp BinexStream.hpp
		Added BINEX code
	
	Application modifications
	-------------------------
	
	- Added apps/positioning/poscvt
		A position converter modeled after timecvt
		
	- Added apps/geomatics/relposition/DDBase
		A network positioning application that uses double
		differenced carrier phases
	
	- Added apps/geomatics/kalman
		Tools for Kalman filtering
		
	- Added apps/geomatics/robust
		Tool for robust statistics
	
	- Added apps/geomatics/????
		Added geodetic reference frames
		
	- Complete rewrite and move of apps/cycleslips/DiscFix
	  Located now in apps/geomatics/cycleslips/DiscFix
	  	DiscFix is now much more object-oriented, faster, more robust
		and more accurate.  Significant changes have been made to the
		algorithm.
	
	- Added apps/visibility/wheresat
		A tool for caculating SV position, azimut and
		elevation from a navigation file
	
	- Added apps/converters/novaRinex
		A Novatel binary to Rinex converter
	
	- Improved apps/filetools/navdmp
		Added -r (RINEX) input capability
	
	- Added apps/qa/Expression
		A fully functional expression interpreter
	
	- Added apps/qa/obsrip
		A utility which transforms RINEX files into linear combos, ect.
	
	- Added functionality to apps/multipath/ObsArray
		Can track observations by PRN and by epoch.  Also can insert
		GPS constants into Expressions.
		
	- Added apps/positioning/posInterp
		This application interpolates positions in a RINEX file, increasing
		the data rate by an integer factor.  An example that uses both
		posInterp and PRSolve is included.
	
	- Added apps/visibility/findMoreThan12
		A new tools which given an ephemeris source, finds times when there are
		more than 12 SVs simultaneously above a specified elevation angle.
	
	- Improved apps/positioning/rinexpvt
		Added optional log file to output
		Added option to set observation rate to other than 30s
		
	
Version 1.1   Friday, January 7, 2005

	General modifications
        ---------------------

	- Added patches to support more compilers:
	     GNU compiler version 3.4
	     GNU compiler under AIX
	     Sun ONE Studio 8

	- GNU make/configure capabilities have been added. Since this
	  is a new feature, your mileage may vary. The makefiles
	  work on systems with newer autoconf toolchain versions.

	- More examples were added to gpstk/examples.
	  These examples are described in the website.

	- Major revamp of the website.
	
	Library modifications
	---------------------

	- P code generator was allocating over 20 megabytes in
	  processes that use the shared library. Now the 20 megabytes
	  are not allocated until the P code generator is initialized
	  by the user.
	
	- Bug fix: FileSpec::extractDayTime() now initializes
	  DayTimes generated from file name to have zero hours,
	  zero minutes, zero seconds, etc.
	
	- Bug fix: DayTime::setGPS now more robust when accepting
	  a year number as a hint to disambiguate which full GPS
	  week to use.
	
	- Added more DayTime tests.
	
	- Bug fix: DayTime user-defined tolerance for comparisons now is
	  working.

	- Bug fix: DayTime::setGPS(short week, long zcount, short year)
	  now works across a year rollover.
	
        - Renamed WxObsData::find(...) to getWxObservation(...) to remove
          any confusion that might develop over having the same method
          name as the STL.
	
	- Bug fix: satellite combinations in RAIM sometimes incorrect when 
	  a user-marked satellite was present.

	- Some Vector routines were throwing Exception instead of 
	  VectorException.

	- Added Vector-Matrix concatentation operators.

	- Added a sub-Vector constructor.

	- Modification to Householder decomposition routine.
	
	- Various fixes to MatrixOperators.

	- Updates to FIC routines.

	- Implemented azimuth and elevation functions in Position, making 
	  use of the functions inherited from Triple. Modified EphemerisRange
	  to use Position, as well as TropModel and ResCor; this eliminated 
	  a bug in the azimuth() in EphemerisRange and means that now there 
	  is only one implementation of az and el. Added a test of the new 
	  routines in positiontest. Also added a Position constructor from Xvt.

	- Bugs in DayTime::setToString() - %f was missing (!) and %S 
	  was acting as %f should; date was trashed when time was set, 
	  and vice versa, and year input was not properly handled.

        - Implemented ionospheric model types other than linear.

	- Cleaned up weather data handling (e.g., error checks).

	
	Application modifications
        -------------------------
	
	apps/difftools

	- Unified code using a common class.


	apps/filetools

	- Improvments to navdmp.

	- New utility called rinexthin for subsampling RINEX observation
	  files.

	
	apps/binding
	
	- This  new project provides GPSTk bindings in other languages
	  has been added. This capability is in an alpha state.
	  Currently there are a limited set of bindings for
	  Tcl/Tk, Python and Octave.

	
	apps/RinexEditor

	-  Bug fix: 'delete all' command was being deleted prematurely.


	apps/RinexPlot

	- Improved documentation.
        
	- Various tweaks.

	- Plotting improvements.


	apps/ionosphere

	- Various improvements.










	