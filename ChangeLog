Version 1.6   Tuesday, June 19, 2009

   General modifications
   ---------------------

   - Majority of version 1.6 comprised of revision number 1962, branching
     took place under revision 1962 from dev/ to branches/RC1.6/
   - There is now a Rinex3 development branch. This release does not include
     support for Rinex3 but we hope to include it in the future.
   - Major improvements in readability of code by adding new comments and
     rearraging a lot of code
   - Added the LGPL to serveral files from which it was missing.
   

   Library modifications
   ---------------------
   - Additions to src
         AllanDeviation.hpp
            Compute the overlapping Allan variance of the phase data provided.
         Antenna.[h|c]pp
            This class encapsulates the data related to GNSS antennas according
            to IGS standards.
         AntexReader.[h|c]pp
            This is a class to read and parse antenna data in Antex file
            format.
         BaseDistribution.hpp
            This is a base class for statistical distributions.
         Chi2Distribution.[h|c]pp
            This class implements the Chi-square distribution.
         ConfDataReader.[h|c]pp
            This is a class to parse and manage configuration data files.
         EllipsoidModel.hpp
            This is a copy of GeoidModel.hpp with the proper name.
         ENUUtil.[h|c]pp
            Converts from Cartesian in XZY to East-North-Up (ENU).
         Epoch.[h|c]pp
            Time representation class for common time formats, including GPS.
         GaussianDistribution.[h|c]pp
            This class implements the Gaussian (or normal) distribution.
         GPSEllipsoid.hpp
            This is a copy of GPSGeoid.hpp with the proper name.
         GPSEphemerisStore.[h|c]pp
            Store GPS broadcast ephemeris information.
         GPSWeek.[h|c]pp
            This class is an abstract base class inherited by other
            GPS-time-related classes.
         InOutFramework.cpp
            Framework for programs that take a single type of input data and
            output a single stream of output.
         IonexBase.hpp
            Does not served any purpose other than to make readable inheritance
            diagrams.
         IonexData.[h|c]pp
            Models a IONEX Data Record.
         IonexHeader.[h|c]pp
            Models the header for a IONEX file.
         IonexStore.[h|c]pp
            Reads and stores Ionosphere maps.
         IonexStream.hpp
            Provides access to IONEX files.
         NEDUtil.[h|c]pp
            Converts from Cartesian in XZY to North-East-Down (NED).
         PowerSum.[h|c]pp
            Computes the power sum of a list of numbers.
         SP3EphemerisStore.[h|c]pp
            Interface to read SP3 files into a TabularEphemerisStore.
         SpecialFunctions.[h|c]pp
            Contains handy special functions: gamma, erf, erfc, etc.
         StudentDistribution.[h|c]pp
            This class implements the t-Student distribution.
         TabularEphemerisStore.[h|c]pp
            Store a tabular list of Xvt data (such as a table of precise
            ephemeris data in an SP3 file) and compute Xvt from this table.
         WGS84Ellipsoid.hpp
            This is a copy of WGS84Geoid.hpp with the proper name.

   - Modified in src
         CommonTime.[h|c]pp
            Added operator<<() and asString() functions as well as a couple
            bug fixes.
         GPSWeekSecond.cpp
            Fix for 32-bit round off error during day of week calculation.
         FFTextStream.hpp
            Fixing a bug when a line of input has more than 256 characters. It
            now throws an exception when a line has more than 256 characters.
         MatrixBase.hpp
            Fixed unary minux operations to return an lvalue.
         MJD.cpp
            Fixed a floating-point rounding error problem which could cause
            exceptions to be thrown when converting to CommonTime.
         ObsID.[h|c]pp
            Fixed an error associated with string values for ValueTypes 'Last'
            and 'Placeholder' not being defined.
         SP3EphemerisStore.[h|c]pp
            Modified in order to implement rejection of satellites with bad or
            absent positional values or clocks. Feature disabled by default.
         StringUtils.hpp
            Improved error reporting and slimmed formattedPrint(). Fixed
            possible "undefined" behavior in matches(). Corrected a bug in
            translate() which allowed index 'inpos' to access 'outputChars'
            beyond its length.
         SVNumXRef.[h|c]pp
            Modified to account for new data since the last update and to allow
            a single SVN to have multiple PRNs over time.
         TimeTag.hpp
            Throw exceptions on invalid conversions and added a printError()
            function.
         TypeID.[h|c]pp
            Fixed and error associated with string values for ValueTypes 'Last'
            and 'Placeholder' not being defined.

   - Added in lib
         - /vdraw
            vdraw is a modification to vplot and much of the code in vdraw was
            moved over from vplot. This library allows drawing shapes and text
            in a vector format and outputting them to files.
         - /geomatics/SRIleastSquares.[h|c]pp
            Implements a general least squares algorithm using SRI, including
            weighted, linear or linearized, robust or sequential algorithms.
         - /procframe/CodeKalmanSolver.[h|c]pp
            Computes the code-based solution using a simple Kalman solver.
         - /procframe/ComputeDOP.[h|c]pp
            Computes the usual DOP values: GDOP, PDOP, TDOP, HDOP and VDOP.
         - /procframe/ComputeSatPCenter.[h|c]pp
            Computes the satellite antenna phase correction, in meters.
         - /procframe/Decimate.[h|c]pp
            Decimates GNSS Data Structures data.
         - /procframe/Dumper.[h|c]pp
            Dumps the values inside a GNSS Data Structure (GDS), and therefore
            is meant to be used with the GDS objects found in DataStructures.
         - /procframe/EclipsedSatFilter.[h|c]pp
            Filters out satellites that are eclipsed by Earth shadow.
         - /procframe/GravitationalDelay.[h|c]pp
            Computes the delay in the signal due to the gravity field.
         - /procframe/IonexModel.[h|c]pp
            Computes the main values related to a given GNSS IONEX model, i.e.,
            TEC value, ionospheric mapping function, slant ionospheric delay.
         - /procframe/Keeper.[h|c]pp
            This class examines a GNSS Data Structure (GDS) and keeps only
            specific values according to their TypeIDs.
         - /procframe/LICSDetector2.[h|c]pp
            Detects cycle slips using LI observables
         - /procframe/PhaseCodeAlignment.[h|c]pp
            Aligns phase with code measurements.
         - /procframe/ProcessingList.[h|c]pp
            Stores ProcessingClass objects in a list.
         - /procfrane/Pruner.[h|c]pp
            This class examines a GNSS Data Structure (GDS) and prunes specific
            values according to their TypeIDs.
         - /procframe/RequireObservables.[h|c]pp
            Filters out satellites that don't have the required observations.
         - /procframe/SatArcMarker.[h|c]pp
            Keeps track of satellite arcs caused by cycle slips.
         - /procframe/SolverPPP.[h|c]pp
            Computes the Precise Point Positioning (PPP) solution using Kalman
            solver that combines ionosphere-free code and phase measurements.
         - /procframe/SolverPPPFB.[h|c]pp
            Computes the Precise Point Positioning (PPP) solution using Kalman
            solver that combines ionosphere-free code and phase measurements
            and has forwards backwards mode.
         - /procframe/Synchronize.[h|c]pp
            Synchronizes two GNSS Data Structures data streams.
         - /rxio/ObsEphReaderFramework.[h|c]pp
            Object intened to be created in place of a CommandOptionParser.
         - /vplot/Axis.[h|c]pp
            Used to draw a simple axis.
         - /vplot/AxisStyle.hpp
            Used to describe an Axis's style.
         - /vplot/LinePlot.[h|c]pp
            Used to draw a lineplot.
         - /vplot/Plot.[h|c]pp
            Basic plot information.
         - /vplot/plottypes.hpp
            Defines plot types.
         - /vplot/ScatterPlot.[h|c]pp
            Used to draw a scatter plot.
         - /vplot/SeriesList.[h|c]pp
            Used to maintain series information for some types of plots.
         - /vplot/Splitter.[h|c]pp
            Used to help with splitting sets of points.
         - /vplot/SurfacePlot.[h|c]pp
            Used to draw a surface plot.

   - Changes in lib
         - /geomatics
            Major changes to the entire library. Adding new features as
            described in DDBase.cpp
         - /procframe/Equation.hpp
            Added '<' operator.
         - /procframe/LICSDetector.cpp
            Simpler method to compute 'currentDeltaT' is now used.
         - /procframe/MWCSDetector.cpp
            Simpler method to compute 'currentDeltaT' is now used.
         - /procframe/Variable.hpp
            Added '<' operator.

   Application modifications
   -------------------------
   - Added in apps
         - /clocktools
            Implements clock time-domain frequency stability metrics as well as
            data editing, noise identification, and plotting routines. Allows
            for basic clock stability analyses and is interoperable with other
            GPSTk programs. Run from the command line with output piped to
            other GPSTk programs.
         - /ObsArrayEvaluator
            Refactoring of mpsolve whic is the GPSTk Multipath Environment
            Evaluator. Computes statistical model of a dual frequency multipath
            combination. The model is a function of azimuth and/or elevation.
         - /performance
            Determines the slot numbers of satellites given input files. Also
            determines if satellites are in or out of the Base24 constellation
            at any given time.
         - /filetools/EphSum.cpp
            Summary of all ephemerides relevant to the day for a PRN.
         - /geomatics/relposition/StochasticModels.cpp
            Stochastic model for measurement errors used in estimation.
         - /geomatics/robust/lsfilt.cpp
            Read the data in one column of a file, and output as least-squares.
            filtered version of the data.
         - /swrx/acquire.cpp
            FFT based acquisition for GPS L1 band.
         - /swrx/hilbert.cpp
            Hilbert transform on samples from output file generated by SiGe
            SE4110L.
         - /swrx/position.cpp
            Position solution.
         - /swrx/RX.cpp
            Integrates position solutions into the tracking algorithm.
         - /swrx/trackerMT.cpp
            Parallel tracker for multiple PRNs.
         - /visibility/CalcDOPs.cpp
            Compute and display satellite visibility information.
         - /visibility/DiscreteVisibleCounts.[h|c]pp
            Discrete counts of how many SVs/stations are visible to a
            station/SV.
         - /visibility/DOPcalc.cpp
            Computes several dilution of precision (DOP) parameters.

   - Changes in apps
         - /geomatics
            Major changes to the entire application. Added new features in
            order to match the geomatics library changes.
         - /MDPtools/SummaryProc.[h|c]pp
            Better accounting of subframe errors.
         - /positioning/PRSolve.cpp
            Added option to process L1 only, L2 only, or iono-free.

   Example modifications
   -------------------------
   - Added in examples
         example8.cpp
            This program shows how to use GNSS Data Structures (GDS) to obtain
            "Precise Point Positioning" (PPP).
         example9.cpp
            This program shows how to use GNSS Data Structures (GDS) and other
            classes to build a reasonable complete application that computes
            "Precise Point Positioning" (PPP).
         example10.cpp
            This program shows how to use GNSS Data Structures (GDS) to obtain
            phase-based differential positioning (single-differences).
         example11.cpp
            Example of GPSTk's built-in postscript plotting routines.
         example12.cpp
            This is a example program to demonstrate some of the functionality
            of the ObsID class. The intent is to use ObsID as a key in a STL
            map of gps data. ObsID supports identifying the data in a manner
            that is similiar but can extend the Rinex 3 specification.
         example13.cpp
            Example of native surface plots.
   - Changes in examples
         example7.cpp
            Added example useage of code-based kalman filtering. Example 7 has
            also become a showcase for several of the new classes added since
            the last release.
   - Cleaned up and added comments to various examples to make them more useful


	#################################################

Version 1.5   Tuesday, March 11, 2008

	General modifications
	---------------------

	- Majority of version 1.5 comprised of revision number 1115, 
	  branching took place under revision 1115 from dev/ to RC1.5/

	- A large amount of work went into ensuring that the GPSTk built
	  on all supported platforms using both jam and make. A place has 
	  been set aside on the TWiki to inform developers on which platforms
	  the Tk has been built successfully.
	  http://www.gpstk.org/bin/view/Development/SourceStatus

	- The Tk now builds successfully on Mac OSX using jam and make

	- Added a library /dev/lib/procframe/ (from Processing Framework)
	  under which all pre-existing classes related to GNSS Data 
	  Structures (GDS) have been moved out of /src/.

	      + lib/procframe/CodeSmoother.[h|c]pp
	                      ComputeCombination.[h|c]pp
			      ComputeIURAWeights.[h|c]pp
			      ComputeLC.[h|c]pp
			      ComputeLI.[h|c]pp
			      ComputeLdelta.[h|c]pp
			      ComputeMOPSWeights.[h|c]pp
			      ComputeMelbourneWubbena.[h|c]pp
			      ComputePC.[h|c]pp
			      ComputePI.[h|c]pp
			      ComputePdelta.[h|c]pp
			      ComputeWindUp.[h|c]pp
			      DataHeaders.[h|c]pp
			      DataStructures.[h|c]pp
			      DeltaOp.[h|c]pp
			      LICSDetector.[h|c]pp
			      MWCSDetector.[h|c]pp
			      ModelObs.[h|c]pp
			      ModelObsFixedStation.[h|c]pp
			      ModeledPR.[h|c]pp
			      ModeledReferencePR.[h|c]pp
			      NablaOp.[h|c]pp
			      OneFreqCSDetector.[h|c]pp
			      PCSmoother.[h|c]pp
			      ProcessingClass.hpp
			      ProcessingVector.[h|c]pp
			      SimpleFilter.[h|c]pp
			      SolverLMS.[h|c]pp
			      SolverWMS.[h|c]pp

	- Integrated a new regex that is LGPL instead of GPL

	- GCC 3.3.5 chokes on the use of __attribute__ - avoid using it
	  unless we're compiling under GCC 4.x

	- Updates to the INSTALL and README including additional website 
	  information, information about new lib directory, an update of
	  the build instructions, and an additional plug for help and 
	  instruction available on the website

	- Added a script to parse apps for user manual
	        /apps/Wikify.pl

	Library modifications
	---------------------

	- Added src/BLQDataReader.[h|c]pp
	        Reads and parses ocean tides harmonics data in BLQ file format.
		Ocean loading displacement models usually use the ocean tide 
		harmonics to compute station biases due to this effect.
		You may find this data in 
		http://www.oso.chalmers.se/~loading/
	
	- Added src/ComputeWindUp.[h|c]pp
	        Computes the wind-up effect on the phase observables in radians.
	
	- Added src/MoonPosition.[h|c]pp
	        Computes the approximate position of the Moon in ECEF.

	- Added src/OceanLoading.[h|c]pp
	        Models station discplacement caused by ovean tides loading

	- Added src/PoleTides.[h|c]pp
	        Computes pole tides according to IERS conventions.

	- Added src/SatDataReader.[h|c]pp
	        Reads and parses satellite data from PRN_GPS-like files. JPL
		provides files called PRN_GPS with important satellite 
		information for some precise GPS data processing algorithms.
		You may find this file in 
		ftp://sideshow.jpl.nasa.gov:/pub/gipsy_products/gipsy_params
	
	- Added src/SolidTides.[h|c]pp
	        Computes the solid tide effect at a given position and epoch
		based on the Williams model (1970).

	- Added lib/rxio/NovatelData.[h|c]pp
	        lib/rxio/NovatelDtream.hpp
		Moved Novatel data parsing into the rxio library
	
	- Added lib/procframe/BasicModel.[h|c]pp
	        Computes the basic parts of a GNSS model. It is a more modular 
		alternative to classes such as ModelObs.

	- Added lib/procframe/ComputeLinear.[h|c]pp
	        ComputeLinear is a GDS-enabled class that allows you to
		compute several previously defined linear combinations in
		one pass and in a flexible way.
	
	- Added lib/procframe/ComputeTropModel.[h|c]pp
	        ComputeTropModel is a GDS-enabled class that computes and
		inserts the main values related to a given GNSS 
		tropospheric model. 
	
	- Added lib/procframe/CorrectObservables.[h|c]pp
	        Corrects observables from effects such as antenna 
		eccentricity, differences in phase centers, offsets due
		to tide effects, etc.

	- Added lib/procframe/Equation.[h|c]pp
	        Used to define and handle an equation when dealing with GDS.
	
	- Added lib/procframe/LinearCombinations.[h|c]pp
	        Defines handy linear conmbinations of GDS data.

	- Added lib/procframe/StochasticModel.[h|c]pp
	        Simple implementations of common stochastic models
		used in Kalman filters.
	
	- Added lib/procframe/Variable.[h|c]pp
	        Used to define and handle a variable when dealing with GDS

	- Improved lib/procframe/ComputeMOPSWeights.[h|c]pp
		More robust when ionospheric information is missing for GDS.
	
	- Improved lib/rxio/MDPNavSubframe.cpp
	           lib/rxio/RinexConverters.cpp
		The above classes now have better LLI computation.

	- Improved src/AlmOrbit.cpp
	           src/SEMAlmanacStore.[h|c]pp
	        Added GPS epoch handling option.
	
	- Improved src/AstronomicalFunctions.[h|c]pp
	           src/SunPosition.[h|c]pp
	        Improvements: Use of static members, definition of 
		constants, etc.

	- Improved src/EngEphemeris.[h|c]pp
	           src/EngNav.cpp
		   src/GPSEphemerisStore.[h|c]pp
	        Added AODO to FIC bit cracking. Added means to access stored
		eph moaps by SV.
	
	- Improved src/MSCData.[h|c]pp
	           src/MSCStore.[h|c]pp
	        Promoted getXvt from MSCStore to MSCData. 
		Old MSCStore::getXvt(string, DayTime) still there. Now 
		overloaded with MSCStore::getXvt(unsigned long, DayTime)

	- Improved src/SP3Data.[h|c]pp
	        Added a version guessing test to support SP3 better.
	
	- Improved src/TropModel.[h|c]pp
	        Added NeillTropModel, a useful model implementing Neill
		mapping functions and used in deodetic software such as 
		JPLs Gipsy/OASIS.
	
	- Improved src/YumaAlmanacStore.[h|c]pp
	        Added time_of_interest option to aid with 10-bit week problem.

	
	Application modifications
	-------------------------

	- Added apps/converters/ash2mdp.cpp
	        ash2mdp moved from apps/receiver/ to /apps/converters/

	- Added apps/converters/ash2xyz.cpp
	        Takes a stream of Ashtech observation and ephemeris data 
		and outputs SV positions and ionospheric corrections. Added
		an exponential filter to iono error and rate calculation.
	
	- Added apps/DataAvailability/DataAvailabilityAnalyzer.[h|c]pp
	        Includes the per-obs changes in the raw statistics.
	
	- Added apps/MDPtools/mdpscreen.cpp
	        mdpscreen moved back into MDPtools, but only being built 
		conditionally.

	- Added apps/MDPtools/mdpEdit.cpp
	        mdpEdit: filters messages based on record number.

	- Added apps/time/generateCalenders.bash
	        Added a simple script to generate los of calendars at once
		using calgps.

	- Improved apps/checktools/CheckFrame.hpp
	        Fixed CheckFrame to return 1 if any erors are encountered.
		Added a command-line-option to CheckFrom to exit on first
		error.

	- Improved apps/reszilla/OrdEngine.cpp
	        The trop model throws erros when the humidity is over 100.
		Instead of sending it values over 100, just send 100.

	- Improved apps/reszilla/OrdPlot.cpp
	        Added a % data autoranger and smoothing on the ords.
	
	- Improved apps/rfw/rfw.cpp
	        Added command line option that sends strings to the 
		source periodically.

	- Improved apps/swrx/PCodeGenerator.hpp
	        GCC 3.3.5 chokes on the use of __attribute__ - avoid using it
		unless we're compiling under GCC 4.x

	- Improved apps/time/calgps.cpp
	        Calgps now in graphical output.

	- Improved apps/visibility/WhereSat.cpp
	        + Got rid of "MATLAB-suitable" output option.
		+ Results now output in a tabular format only.
		+ Can process more than one SV, or all SVs.
		+ Added time format option.
		+ Output clock correction in ms, not seconds.
		+ Better exception handling.
	
	- Improved apps/MDPtools/
	        To allow the Tk to build under all platforms MDPTool was
		removed from all non UNIX based system builds, namely Windows.

	- Improved apps/receiver/
	        Compilation disabled becasue of severe linking problems.

	- Improved apps/reszilla/
	        Changed Install process to allow python scripts to be 
		installed without a hickup under Windows.


	#################################################

Version 1.4   Tuesday, December 18, 2007

	General modifications
	---------------------

	- Majority of version 1.4 comprised of revision number 863 
	  branching took place under revision 864 from dev/ to RC1.4/
	
	- Major refactoring of the Ephemeris/Almanac classes. This change may 
	  break some apps. To fix them the following translations are useful:
	
              Old                           |        New
    -------------------------------------------------------------------------------
    gpstk::EphemerisStore		    | gpstk::XvtStore<gpstk::SatID>
    gpstk::BCEphemerisStore		    | gpstk::GPSEphemerisStore
    gpstk::AlmanacStore                     | gpstk::GPSAlmanacStore
    gpstk::EphemerisStore::NoEphemerisFound | gpstk::InvalidRequest
    eph.getSatXvt(sat, time)	            | eph.getXvt(sat, time)
    eph.getSatXvt(prn, time)		    | eph.getXvt(SatID(prn, SatID::systemGPS), time)
    eph.dump(0, cout)			    | eph.dump(cout, 0)


        - Added an updated LaTeX source for table describing apps of v1.3, 
	        as well as a list of classes in the gpstk libraries 
	        (sorted & categorized) found in ref/glance/

	- Added LeTex source for the GPSTk paper at the ION-GNSS-2006

	- Added a library /dev/lib/vplot/ to create drawing primitives in SVG 
	        and postscript formats. Intended to support complex, fully 
	        customizable visualizations on GNSS analyses. Supported only 
	        in jam for now,	but with the hope of support in make.

	- Improved version control 
	  * set gpstk package version to 1.3 in the autoconf build world
	  * set the current shared library major version to 13, so gpstk 1.3
	    delivers lib{gpstk,rxio,mdplib,...}.so.13.0
	  * now allows jam and make to build shared libraries with the 
	    appropriate versions
	  * causes jam to install headers to $PREFIX/include/gpstk to prevent 
	    header namespace collision. This behaviour is consistent with the 
	    "make" build.

	- Moved apps/geomatics/lib library to dev/lib/geomatics

	Library modifications
	---------------------

	- Added src/InOutFramework.hpp
	        New framework that is useful for a program that processes one 
		input and produces one output. 
	
	- Added src/ModelObs.[h|c]pp
	        ModelObs class is a GDS-optimized version ModeledPR
	
	- Added src/GPSAlmanacStore.[h|c]pp
	        Part of the refactoring of the Ephemeris/Almanac classes
		A migration path has been provided for BCEPhemerisStore, 
		EphemerisStore, and AlmanacStore
	
	- Added src/GPSEphemerisStore.[h|c]pp
	        Part of the refactoring of the Ephemeris/Almanac classes
		A migration path has been provided for BCEPhemerisStore, 
		EphemerisStore, and AlmanacStore

	- Added src/XvtStore.hpp
	        Part of the refactoring of the Ephemeris/Almanac classes
		A migration path has been provided for BCEPhemerisStore, 
		EphemerisStore, and AlmanacStore
	
	- Added src/ProcessingClass.hpp
	        ProcessingClass is an abstract base class for all objects 
		processing GNSS Data Structures. This step furthers the GNSS 
		Data Structures (GDS) processing paradigm clearly separating 
		the GDS and the objects that process them.

	- Added src/ProcessingList.[h|c]pp
	        ProcessingList allows to create run-time defined and modified 
		lists of processing objects to be applied on GNSS data 
		structures. This class furthers the paradigm of GNSS data 
		processing as an assembly line.

	- Added src/ProcessingVector.[h|c]pp
	        ProcessingVector allows to create run-time defined and modified
		std::vectors of processing objects to be applied on GNSS data
		structures. This class furthers the paradigm of GNSS data
		processing as an assembly line.

	- Added src/SimpleFilter.cpp
	        SimpleFilter class was modified in order to inherit from 
	        ProcessingClass.
	
	- Added lib/vplot/Helper.hpp
	        A helper class for creating VGImage pointer for a file name 
		using the extension.

	- Added src/ComputeLC.cpp
	        src/ComputeLI.cpp
		src/ComputeMelbourneWubbena.cpp
		src/ComputePC.cpp
		src/OneFreqCSDetector.cpp
		src/LICSDetector.cpp
		src/MWCSDetector.cpp
		src/CodeSmoother.cpp
		src/ComputeLdelta.cpp
		src/ComputePI.cpp
		src/CoputePdelta.cpp
		src/PCSmoother.cpp
		src/ComputeIURAWeights.cpp
		src/ComputeMOPSWeights.cpp
		The above classes were added to inherit from ProcessingClass

	- Improved src/XYZ2NED.[h|c]pp
	           src/NablaOP.[h|c]pp
		   src/DeltaOP.[h|c]pp
		The above classes were modified to inherit from ProcessingClass

	- Improved lib/rxio/AshtechData.[h|c]pp
	           lib/rxio/AshtechMBEN.[h|c]pp
		   lib/rxio/AshtechPBEN.[h|c]pp
		   lib/rxio/MDPHeader.hpp
		   lib/rxio/MDPObsEpoch
		   lib/rxio/ObsUtils.cpp
		   lib/rxio/ash2mdp.cpp
	        Added checksum checking to ashtech data, and made the parsing
		a bit more robust
	
	- Improved lib/rxio/FFIdentifier.[h|c]pp
	        FFIdentifier no londer uses iostream exceptions to determine
		file type

	- Improved lib/rxio/EphReader.[h|c]pp 
	        Added support for YUMA and SEM streams

	- Improved src/SatID.hpp
	        Added systemUderDefined to SatId and corresponding change 
	        in example7.cpp


	Application modifications
	-------------------------

	- Added apps/visibility/svvis.cpp
	        Computes when satellites are visible at a given point 
		on the earth

	- Improved apps/DataAvailability/DataAvailabilityAnalyzer.[h|c]pp
	        Added a position option
	
	- Improved apps/receiver/rfw.cpp
	        Added new input option??????
	
	- Improved apps/visibility/findMoreThan12.cpp
	        Added SV azmith to output

	- Improved apps/time/calgps.cpp
	        Added ability to draw a calender

	

Version 1.3   Monday, July 16, 2007

	General modifications
	---------------------

	- Most of version 1.3 comprised of revision number 701

	- gpstk1.3/apps/time/calgps.cpp was pulled from revision nember 707

	- The current msi for the windows package may not update the 
	        previous version installations
	
	- Added examples/example7.cpp & associated RINEX data files
	        This program shows 10 different ways to process GPS data using
		"GNSS data structures". The "GNSS Data Structures" paradigm can 
	        process GPS code-based data based on Vectors, Matrices 
		and other objects.
	
	- Added examples/example6.cpp
	        Shows a rather minimalist way to process GPS data using GNSS Data
		Structures

	- Improved src/icd_200_constants.hpp
	        Fixed RSVCLK value	

	- GPSTk is now able to build under the MS Visual Studio 2005 (Express
	        Edition)

	- A simulator has been added but is not part of the binary build, but
	        can be found in the source tarball under gpstk/apps/swrx

	Library modifications
	---------------------

	- Added src/SimpleKalmanFilter.[h|c]pp
	        Implements a version of the Kalman filter, based in Vectors
		and Matrices - not yet GNSS data structures-enabled

	- Added src/NablaOp.[h|c]pp
	        Applies differences in satellite-related data to the GNSS
		data structures (a.k.a. GDS)

	- Added src/TypeID.[h|c]pp
	        Index able to represent any type of observation, correction,
		model parameter or other data value of interest 

	- Added src/DataHeaders.[h|c]pp
	        Adds several headers to be used with the GNSS data structures
		classes

	- Added DataStructures.[h|c]pp
	        Set of data structures to be used by other GPSTk classes

	- Added src/DeltaOp.[h|c]pp
	        Applies differences on ground-related data to the GNSS data
		structures

	- Added src/ComputeCompination.hpp
	        Base class to ease computing of data for the GNSS data structures

	- Added src/ComputePC.hpp
	        Eases computing the PC combination for GNSS data structures

	- Added src/ComputeLC.hpp
	        Eases computing the LC combination for GNSS data structures

	- Added src/ComputeLI.hpp
	        Eases computing the LI combination for GNSS data structures

	- Added src/ComputeLdelta.hpp
	        Eases computing the Ldelta combination for GNSS data structures

	- Added src/ComputePdelta.hpponly
	        Eases computing the Pdelta combination for GNSS data structures

	- Added src/ComputePI.hpp
	        Eases computing the PI combination for GNSS data structures

	- Added src/ComputeMelbourneWubbena.hpp
	        Eases computing the ComputeMelbourneWubbena combination for 
		GNSS data structures

	- Added src/ComputeIURAWeights.hpp
	        Computes satellites weights based on URA Index for GNSS data
		structures

	- Added src/ComputeMOPSWeights.hpp
	        Computes satellites weights based on Appendix J of MOPS C
		(RTCA/DO-229C), for GNSS data structures

	- Added src/SimpleFilter.hpp
	        Filters satellites with observables grossly out of bounds, 
		intended for GNSS data structures

	- Added src/OneFreqCSDetector.hpp
	        Detects cycle slips using observables in just one frequency

	- Added src/LICSDetector.hpp
	        Detects cycle slips using LI observables

	- Added src/MWCSDetector.hpp
	        Detects cycle slips using the Melbourne-Wubbena combination

	- Added src/CodeSmoother.hpp
	        Smoothes a given code observable using the corresponding phase 
		observable

	- Added src/PCsmoother.hpp
	        Smoothes PC code observables using the corresponding LC phase
		observables

	- Added src/XYZ2NEU.[h|c]pp
	        Reference frame change from ECEF XYZ to topocentric North-East-Up

	- Added src/XYZ2NED.[h|c]pp
	        Reference frame change from ECEF XYZ to topocentric North-East-Down

	- Added src/TimeNamedFileStream.hpp
	        Simple time-based file name stream

	- Improved src/ModeledReferencePR.[c|h]pp
	        Adapted to work with GNSS data structures

	- Improved src/ModeledPR.[h|c]pp
	        Adapted to work with GNSS data structures

	- Improved src/TropModel.hpp
	        Added method MOPSTropModel::setAllParameters()

	- Improved src/SolverLMS.[h|c]pp
	        Adapted to work with GNSS data structures

	- Improved src/SolverWMS.[h|c]pp
	        Adapted to work with GNSS data structures

	- Improved src/icd_200_constants.hpp
	        Added data regarding L5, L6, L7 and L8

	- Improved src/RinexHeader.[h|c]pp
	        Can now process RINEX2.11 navigation files

	- Improved src/icd_200_constants.hpp
	        Fixed RSVCLK

	- Improved src/SP3Data.cpp
	        Modified the reader to be tolerant of short PG lines

	- Improved src/RinexUtilitties.[h|c]pp
	        Added a sort routine 

	- Improved src/EngAlmanac.[h|c]pp
	        Routing added that performs a simple sanity check on the almanac
	
	Application modifications
	-------------------------

	- Improved apps/differential/vecsol.cpp
	        Along with other submissions allows the toolkit to build under
		the MS Visual Studio 2005

	- Improved apps/Rinextools.[h|c]pp
	        Increased robustness and added multiple input file capabilities

	- Improved all tools to process input files in time order:
	        apps/Rinextools/ResCor.cpp
		apps/Rinextools/RinSum.cpp
		apps/Rinextools/RinexDump.cpp
		apps/positioning/PRSolve.cpp

Version 1.2   Monday, November 6, 2006
	
	General modifications
	---------------------
	
	- Moved from Perforce to a Subversion repository located at 
		https://svn.sourceforge.net/svnroot/gpstk
	
	- GPSTk library testing is now being implemented in dev/tests
		These unit tests for the library currently cover over
		40% of the code with an average of 95% coverage for 
		tested classes.  Tests use CppUnit and Perl scripts.
		See test documentation for more information.
	
	- Added examples/example5.cpp
		An example that shows how to use some very useful high level
		GPSTk classes for positioning
			
	- Added Python support to the GPSTk
	
	- Added capability for FileHunter to work under Window and Cygwin
	
	Library modifications
	---------------------
	
	- Added RINEX version 2.11 support for GPS Navigation files
	
	- Added the following prototype time classes:
		src/CommonTime.[h|c]pp
		src/YDSTime.[h|c]pp
		src/CivilTime.[h|c]pp
		src/GPSEpochWeekSecond.[h|c]pp
		src/GPSWeekSecond.[h|c]pp
		src/GPSWeekZcount.[h|c]pp
		src/JulianDate.[h|c]pp
		src/MJD.[h|c]pp
		src/UnixTime.[h|c]pp
		
	- Added src/TimeConstants.hpp
		Time constants
	
	- Added src/TimeConverters.[c|h]pp
		Time converstion routines
	
	- Added src/Bancroft.[h|c]pp 
		Class gets an initial guess of GPS receiver's position
		
	- Added src/SVExclusionList.[h|c]pp
	
	- Added and implemented src/SatID.hpp
		Class which encapsulates Satellite Identification information
	
	- Added src/ModeledPR.[h|c]pp
		Encapsulates computation of modeled pseudoranges of a mobile
		receiver
		
	- Added src/SimpleIURAWeight.[h|c]pp
		Assigns weights to satellites based on their URA Index
	 
	- Added src/ModeledPseudorangeBase.hpp
		An abstract base class for modeled pseudoranges
	
	- Added src/WeightBase.hpp
		An abstract base class for algorithms assigning weights to satellites
			
	- Improved src/Matrix.hpp and src/Vector.hpp
		Added unary minus operator, CholeskyCrout class and inverseChol method
	
	- Improved src/Vector.hpp
		Added add() method
		
	- Improved src/Stats.hpp 
		Better handling of weighted input
		
	- Improved src/Tropmodel.[h|c]pp
		Added GCAT tropospheric model
		Added MOPSTropModel
		
	- Improved src/Position.[h|c]pp 
		Added methods elevationGeodetic() and azimuthGeodetic()
	
	- Improved src/TabularEphemerisStore.[h|c]pp
		Added method hasTGD()
		
	- Improved src/BCEphemerisStore.[h|c]pp
		Added method getTGD() to return the Total Group Delay of the SV
	
	- Improved src/EphemerisRange.[h|c]pp
		Added methods elevationGeodeitc() and azimuthGeodetic().
		Changed RelativityCorrection() to improved speed and precision
	
	- Added src/BinexData.[c|h]pp BinexFilterOperators.hpp BinexStream.hpp
		Added BINEX code
	
	Application modifications
	-------------------------
	
	- Added apps/positioning/poscvt
		A position converter modeled after timecvt
		
	- Added apps/geomatics/relposition/DDBase
		A network positioning application that uses double
		differenced carrier phases
	
	- Added apps/geomatics/kalman
		Tools for Kalman filtering
		
	- Added apps/geomatics/robust
		Tool for robust statistics
	
	- Added apps/geomatics/????
		Added geodetic reference frames
		
	- Complete rewrite and move of apps/cycleslips/DiscFix
	  Located now in apps/geomatics/cycleslips/DiscFix
	  	DiscFix is now much more object-oriented, faster, more robust
		and more accurate.  Significant changes have been made to the
		algorithm.
	
	- Added apps/visibility/wheresat
		A tool for calculating SV position, azimuth and
		elevation from a navigation file
	
	- Added apps/converters/novaRinex
		A NovAtel binary to Rinex converter
	
	- Improved apps/filetools/navdmp
		Added -r (RINEX) input capability
	
	- Added apps/qa/Expression
		A fully functional expression interpreter
	
	- Added apps/qa/obsrip
		A utility which transforms RINEX files into linear combos, ect.
	
	- Added functionality to apps/multipath/ObsArray
		Can track observations by PRN and by epoch.  Also can insert
		GPS constants into Expressions.
		
	- Added apps/positioning/posInterp
		This application interpolates positions in a RINEX file, increasing
		the data rate by an integer factor.  An example that uses both
		posInterp and PRSolve is included.
	
	- Added apps/visibility/findMoreThan12
		A new tools which given an ephemeris source, finds times when there are
		more than 12 SVs simultaneously above a specified elevation angle.
	
	- Improved apps/positioning/rinexpvt
		Added optional log file to output
		Added option to set observation rate to other than 30s
		
	
Version 1.1   Friday, January 7, 2005

	General modifications
	---------------------

	- Added patches to support more compilers:
	     GNU compiler version 3.4
	     GNU compiler under AIX
	     Sun ONE Studio 8

	- GNU make/configure capabilities have been added. Since this
	  is a new feature, your mileage may vary. The makefiles
	  work on systems with newer autoconf toolchain versions.

	- More examples were added to gpstk/examples.
	  These examples are described in the website.

	- Major revamp of the website.
	
	Library modifications
	---------------------

	- P code generator was allocating over 20 megabytes in
	  processes that use the shared library. Now the 20 megabytes
	  are not allocated until the P code generator is initialized
	  by the user.
	
	- Bug fix: FileSpec::extractDayTime() now initializes
	  DayTimes generated from file name to have zero hours,
	  zero minutes, zero seconds, etc.
	
	- Bug fix: DayTime::setGPS now more robust when accepting
	  a year number as a hint to disambiguate which full GPS
	  week to use.
	
	- Added more DayTime tests.
	
	- Bug fix: DayTime user-defined tolerance for comparisons now is
	  working.

	- Bug fix: DayTime::setGPS(short week, long zcount, short year)
	  now works across a year rollover.
	
	- Renamed WxObsData::find(...) to getWxObservation(...) to remove
	  any confusion that might develop over having the same method
	  name as the STL.
	
	- Bug fix: satellite combinations in RAIM sometimes incorrect when 
	  a user-marked satellite was present.

	- Some Vector routines were throwing Exception instead of 
	  VectorException.

	- Added Vector-Matrix concatentation operators.

	- Added a sub-Vector constructor.

	- Modification to Householder decomposition routine.
	
	- Various fixes to MatrixOperators.

	- Updates to FIC routines.

	- Implemented azimuth and elevation functions in Position, making 
	  use of the functions inherited from Triple. Modified EphemerisRange
	  to use Position, as well as TropModel and ResCor; this eliminated 
	  a bug in the azimuth() in EphemerisRange and means that now there 
	  is only one implementation of az and el. Added a test of the new 
	  routines in positiontest. Also added a Position constructor from Xvt.

	- Bugs in DayTime::setToString() - %f was missing (!) and %S 
	  was acting as %f should; date was trashed when time was set, 
	  and vice versa, and year input was not properly handled.

	- Implemented ionospheric model types other than linear.

	- Cleaned up weather data handling (e.g., error checks).

	
	Application modifications
	-------------------------
	
	apps/difftools

	- Unified code using a common class.


	apps/filetools

	- Improvments to navdmp.

	- New utility called rinexthin for subsampling RINEX observation
	  files.

	
	apps/binding
	
	- This  new project provides GPSTk bindings in other languages
	  has been added. This capability is in an alpha state.
	  Currently there are a limited set of bindings for
	  Tcl/Tk, Python and Octave.

	
	apps/RinexEditor

	-  Bug fix: 'delete all' command was being deleted prematurely.


	apps/RinexPlot

	- Improved documentation.

	- Various tweaks.

	- Plotting improvements.


	apps/ionosphere

	- Various improvements.










	
